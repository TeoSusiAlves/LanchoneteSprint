// <auto-generated />
using System;
using Lanchonete.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LanchoneteSprint2.Migrations
{
    [DbContext(typeof(ClientContext))]
    [Migration("20231017102451_secundary")]
    partial class secundary
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LanchoneteSprint2.Models.CadCompras", b =>
                {
                    b.Property<Guid>("CadComprasId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DataHora")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("FornecedorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Movimentacao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nota")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CadComprasId");

                    b.HasIndex("FornecedorId");

                    b.ToTable("tbCadCompras", (string)null);
                });

            modelBuilder.Entity("LanchoneteSprint2.Models.CadProduto", b =>
                {
                    b.Property<Guid>("CadProdutoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CadProdutoId");

                    b.ToTable("tbCadProduto", (string)null);
                });

            modelBuilder.Entity("LanchoneteSprint2.Models.CadVendas", b =>
                {
                    b.Property<Guid>("CadVendasId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClienteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DataHora")
                        .HasColumnType("datetime2");

                    b.Property<string>("Movimentacao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nota")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CadVendasId");

                    b.HasIndex("ClienteId");

                    b.ToTable("tbCadVendas", (string)null);
                });

            modelBuilder.Entity("LanchoneteSprint2.Models.Cliente", b =>
                {
                    b.Property<Guid>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Endereço")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClienteId");

                    b.ToTable("tbClientes", (string)null);
                });

            modelBuilder.Entity("LanchoneteSprint2.Models.CompraItem", b =>
                {
                    b.Property<Guid>("CompraItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CadComprasId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Preco")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("ProdutoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Qtd")
                        .HasColumnType("int");

                    b.HasKey("CompraItemId");

                    b.HasIndex("CadComprasId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("tbCompraItem", (string)null);
                });

            modelBuilder.Entity("LanchoneteSprint2.Models.Fornecedor", b =>
                {
                    b.Property<Guid>("FornecedorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Cnpj")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FornecedorId");

                    b.ToTable("tbFornecedores", (string)null);
                });

            modelBuilder.Entity("LanchoneteSprint2.Models.Produto", b =>
                {
                    b.Property<Guid>("ProdutoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CadComprasId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CadProdutoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CadVendasId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Estoque")
                        .HasColumnType("int");

                    b.Property<Guid>("FornecedorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PrecoUn")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ProdutoId");

                    b.HasIndex("CadComprasId");

                    b.HasIndex("CadProdutoId");

                    b.HasIndex("CadVendasId");

                    b.HasIndex("FornecedorId");

                    b.ToTable("tbProdutos", (string)null);
                });

            modelBuilder.Entity("LanchoneteSprint2.Models.VendeItem", b =>
                {
                    b.Property<Guid>("VendeItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CadVendasId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Preco")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("ProdutoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Qtd")
                        .HasColumnType("int");

                    b.HasKey("VendeItemId");

                    b.HasIndex("CadVendasId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("tbVendeItem", (string)null);
                });

            modelBuilder.Entity("LanchoneteSprint2.Models.CadCompras", b =>
                {
                    b.HasOne("LanchoneteSprint2.Models.Fornecedor", null)
                        .WithMany("CadCompras")
                        .HasForeignKey("FornecedorId");
                });

            modelBuilder.Entity("LanchoneteSprint2.Models.CadVendas", b =>
                {
                    b.HasOne("LanchoneteSprint2.Models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("LanchoneteSprint2.Models.CompraItem", b =>
                {
                    b.HasOne("LanchoneteSprint2.Models.CadCompras", "CadCompras")
                        .WithMany()
                        .HasForeignKey("CadComprasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LanchoneteSprint2.Models.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CadCompras");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("LanchoneteSprint2.Models.Produto", b =>
                {
                    b.HasOne("LanchoneteSprint2.Models.CadCompras", null)
                        .WithMany("Produto")
                        .HasForeignKey("CadComprasId");

                    b.HasOne("LanchoneteSprint2.Models.CadProduto", "CadProduto")
                        .WithMany()
                        .HasForeignKey("CadProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LanchoneteSprint2.Models.CadVendas", null)
                        .WithMany("Produto")
                        .HasForeignKey("CadVendasId");

                    b.HasOne("LanchoneteSprint2.Models.Fornecedor", "Fornecedor")
                        .WithMany()
                        .HasForeignKey("FornecedorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CadProduto");

                    b.Navigation("Fornecedor");
                });

            modelBuilder.Entity("LanchoneteSprint2.Models.VendeItem", b =>
                {
                    b.HasOne("LanchoneteSprint2.Models.CadVendas", "CadVendas")
                        .WithMany()
                        .HasForeignKey("CadVendasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LanchoneteSprint2.Models.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CadVendas");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("LanchoneteSprint2.Models.CadCompras", b =>
                {
                    b.Navigation("Produto");
                });

            modelBuilder.Entity("LanchoneteSprint2.Models.CadVendas", b =>
                {
                    b.Navigation("Produto");
                });

            modelBuilder.Entity("LanchoneteSprint2.Models.Fornecedor", b =>
                {
                    b.Navigation("CadCompras");
                });
#pragma warning restore 612, 618
        }
    }
}
